{"ast":null,"code":"import Axios from 'axios';\nimport { useReducer, useEffect } from 'react';\nconst ACTIONS = {\n  MAKE_REQUESTS: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error',\n  UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n};\nconst BASE_URL = \"https://jobs.github.com/positions.json\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUESTS:\n      return {\n        loading: true,\n        jobs: []\n      };\n\n    case ACTIONS.GET_DATA:\n      return { ...state,\n        loading: false,\n        jobs: action.payload.jobs\n      };\n\n    case ACTIONS.ERROR:\n      return { ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: []\n      };\n\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return { ...state,\n        hasNextPage: action.payload.hasNextPage\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default function JobsData(params, page) {\n  const [state, dispatch] = useReducer(reducer, {\n    jobs: [],\n    loading: true\n  });\n  useEffect(() => {\n    const cancelToken1 = Axios.CancelToken.source();\n    dispatch({\n      type: ACTIONS.MAKE_REQUESTS\n    });\n    Axios.get(BASE_URL, {\n      cancelToken: cancelToken1.token,\n      params: {\n        markdown: true,\n        page: page,\n        ...params\n      }\n    }).then(res => {\n      dispatch({\n        type: ACTIONS.GET_DATA,\n        payload: {\n          jobs: res.data\n        }\n      });\n    }).catch(e => {\n      if (Axios.isCancel(e)) return;\n      dispatch({\n        type: ACTIONS.ERROR,\n        payload: {\n          error: e\n        }\n      });\n    }); // for next page\n\n    const cancelToken2 = Axios.CancelToken.source();\n    Axios.get(BASE_URL, {\n      cancelToken: cancelToken2.token,\n      params: {\n        markdown: true,\n        page: page + 1,\n        ...params\n      }\n    }).then(res => {\n      dispatch({\n        type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\n        payload: {\n          hasNextPage: res.data.length !== 0\n        }\n      });\n    }).catch(e => {\n      if (Axios.isCancel(e)) return;\n      dispatch({\n        type: ACTIONS.ERROR,\n        payload: {\n          error: e\n        }\n      });\n    });\n    return () => {\n      cancelToken1.cancel();\n      cancelToken2.cancel();\n    };\n  }, [params, page]);\n  return state;\n}","map":{"version":3,"sources":["/home/suraj/Learning/HacktoberFest/meslaApp/src/Jobs/JobsData.js"],"names":["Axios","useReducer","useEffect","ACTIONS","MAKE_REQUESTS","GET_DATA","ERROR","UPDATE_HAS_NEXT_PAGE","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","JobsData","params","page","dispatch","cancelToken1","CancelToken","source","get","cancelToken","token","markdown","then","res","data","catch","e","isCancel","cancelToken2","length","cancel"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport {useReducer, useEffect } from 'react'\n\nconst ACTIONS = {\n    MAKE_REQUESTS: 'make-request',\n    GET_DATA: 'get-data',\n    ERROR: 'error',\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page'\n}\n\nconst BASE_URL = \"https://jobs.github.com/positions.json\";\n\n\nfunction reducer (state, action) {\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUESTS:\n            return {loading: true, jobs: [] }\n        case ACTIONS.GET_DATA:\n            return {...state, loading: false, jobs: action.payload.jobs }\n        case ACTIONS.ERROR:\n            return {...state, loading: false, error: action.payload.error, jobs: [] }\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n            return {...state, hasNextPage: action.payload.hasNextPage }\n            default:\n            return state;\n\n    }\n\n}\n\n\nexport default function JobsData (params, page) {\n   const [state, dispatch] = useReducer(reducer, {jobs: [], loading: true})\n\n   useEffect(() => {\n       const cancelToken1 = Axios.CancelToken.source();\n        dispatch({type: ACTIONS.MAKE_REQUESTS})\n        Axios.get(BASE_URL, {\n            cancelToken: cancelToken1.token,\n            params: {markdown: true, page: page, ...params}\n        })\n          .then(res => {\n              dispatch({type: ACTIONS.GET_DATA, payload: {jobs: res.data}})\n          }).catch(e => {\n              if (Axios.isCancel(e)) return ;\n              dispatch({type: ACTIONS.ERROR, payload: {error: e}})}\n\n              )\n\n\n        // for next page\n        const cancelToken2 = Axios.CancelToken.source();\n        Axios.get(BASE_URL, {\n            cancelToken: cancelToken2.token,\n            params: {markdown: true, page: page+1, ...params}\n        })\n            .then(res => {\n                dispatch({type: ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: {hasNextPage: res.data.length !== 0}})\n            }).catch(e => {\n                if (Axios.isCancel(e)) return ;\n                dispatch({type: ACTIONS.ERROR, payload: {error: e}})}\n\n                )\n\n     return () => {\n         cancelToken1.cancel();\n         cancelToken2.cancel();\n     }\n   }, [params, page])\n\n    return state; \n}"]},"metadata":{},"sourceType":"module"}